name: CI/CD Pipeline with Testing and Scanning

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build-test:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'

    - name: Install dependencies
      run: |
        cd webApp
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Run unit tests (pytest)
      run: |
        cd webApp
        pytest

    - name: Build Docker image
      run: |
        cd webApp
        docker build -t flask-webapp .

    - name: Tag Docker image for Docker Hub
      run: |
        docker tag flask-webapp ${{ secrets.DOCKER_USERNAME }}/flask-webapp:latest

    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Push Docker image to Docker Hub
      run: |
        docker push ${{ secrets.DOCKER_USERNAME }}/flask-webapp:latest

  scan:
    runs-on: ubuntu-latest
    needs: build-test  

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'

    - name: Install Semgrep and Bandit
      run: |
        pip install semgrep bandit

    - name: Run Semgrep
      run: |
        semgrep --config p/default webApp || true

    - name: Run Bandit (Python security linter)
      run: |
        bandit -r webApp -lll --exit-zero

    post-deployment-pentesting:
    runs-on: ubuntu-latest
    needs: build-test

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Start Docker container for app
      run: |
        docker run -d -p 5000:5000 --name pentest-target flask-webapp
        sleep 10

    - name: Install Nuclei
      run: |
        curl -sL https://github.com/projectdiscovery/nuclei/releases/latest/download/nuclei_2.9.5_linux_amd64.zip -o nuclei.zip
        unzip nuclei.zip
        chmod +x nuclei
        sudo mv nuclei /usr/local/bin/
        nuclei -version

    - name: Run Nuclei scan
      run: |
        mkdir -p scan-reports
        nuclei -u http://localhost:5000 -severity critical,high,medium -o scan-reports/nuclei.txt || true

    - name: Install OWASP ZAP CLI
      run: |
        sudo apt-get update
        sudo apt-get install -y zaproxy

    - name: Run OWASP ZAP baseline scan
      run: |
        mkdir -p scan-reports
        zap-baseline.py -t http://localhost:5000 -r scan-reports/zap-report.html || true

    - name: Parse ZAP results (fail on medium or high alerts)
      run: |
        if grep -iE 'Medium|High' scan-reports/zap-report.html; then
          echo "❌ OWASP ZAP found medium or high alerts!"
          exit 1
        else
          echo "✅ OWASP ZAP did not find critical issues."
        fi

    - name: Stop and remove container
      if: always()
      run: |
        docker stop pentest-target
        docker rm pentest-target

